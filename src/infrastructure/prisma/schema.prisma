// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int   @id @default(autoincrement())
  email        String   @unique
  username     String   @unique
  password     String
  registeredAt DateTime @default(now())
  memberships  Membership[]
  tasks        Task[]
}

model Team {
  id           Int @id @default(autoincrement())
  name         String
  description  String?
  createdAt    DateTime @default(now())
  memberships  Membership[]
  objectives   Objective[]
}

model Membership {
  @@id([userId, teamId])
  role         String
  joinedAt    DateTime @default(now())
  user         User   @relation(fields: [userId], references: [id])
  userId       Int
  team         Team   @relation(fields: [teamId], references: [id])
  teamId       Int
}

model Objective {
  id           Int @id @default(autoincrement())
  title        String
  description  String?
  createdAt    DateTime @default(now())
  team         Team   @relation(fields: [teamId], references: [id])
  teamId       Int
  tasks        Task[]
}

model Task {
  id           Int @id @default(autoincrement())
  title        String
  description  String?
  createdAt    DateTime @default(now())
  objective    Objective   @relation(fields: [objectiveId], references: [id])
  objectiveId  Int
  assignee     User?   @relation(fields: [assigneeId], references: [id])
  assigneeId   Int?
  status       String
}